# Change bind key to C-a (don't have to reach as far)
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Option to not have to keep finger on control
bind-key ^D detach-client

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

# Set default shell to zsh.
set-option -g default-shell /bin/zsh

# Bigger history
set -g history-limit 10000

# Enable mouse support
set -g mouse on

# Create splits and vertical splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Switch panes
is_vim='echo "{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Vimify keybindings
set -g status-keys vi
setw -g mode-keys vi

# No escape time for vi mode
set -sg escape-time 0

# Screen like binding for last window
unbind l
bind C-a last-window

# New window/pane in current path
bind c new-window -c "#{pane_current_path}"

# Copy and paste between x and tmux clipboards
set -g assume-paste-time 0
bind C-p run "tmux set-buffer \"$(xsel --clipboard --output)\"; tmux paste-buffer"
bind C-y run "tmux save-buffer | xsel --clipboard --input" \; display "Copied to clipboard."

# Toggle synchronization of all panes
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# Index windows from 1
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Hide status bar
set-option -g status off

# Reload tmux config
unbind r
bind r source-file ~/.tmux.conf \; display "Config reloaded."
